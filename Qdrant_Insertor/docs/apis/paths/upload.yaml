# Upload Path

upload:
  post:
    operationId: uploadDocument
    tags:
      - 文档上传
    summary: 上传文档到默认集合
    description: |
      将文档上传到默认集合，系统会自动处理文档并生成向量嵌入。
      
      ## 文档处理流程
      
      上传的文档会经过以下处理步骤：
      1. **文件验证**: 检查文件格式和大小限制
      2. **内容提取**: 从文件中提取文本内容
      3. **文本分块**: 根据配置的分块策略将文本分割成小块
      4. **向量嵌入**: 为每个文本块生成向量嵌入
      5. **索引存储**: 将向量存储到Qdrant数据库
      6. **元数据存储**: 将文档和文本块元数据存储到SQLite数据库
      
      ## 支持的文件格式
      
      当前仅支持文本文件：
      - **纯文本文件** (.txt)
      - **Markdown文件** (.md, .markdown)
      - **其他文本格式** (基于MIME类型检测)
      
      ## 使用场景
      
      - **快速上传**: 快速添加文档到默认集合
      - **批量导入**: 结合脚本批量上传多个文档
      - **内容管理**: 通过API管理文档内容
      
      ## 注意事项
      
      - **文件大小**: 有最大文件大小限制（通常为10MB）
      - **处理时间**: 大文件处理可能需要较长时间
      - **异步处理**: 文档处理是异步进行的，上传成功不代表处理完成
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
                description: |
                  要上传的文件。
                  
                  **支持格式**: 文本文件（.txt, .md等）
                  **大小限制**: 通常为10MB
                  **编码**: UTF-8编码推荐
            required:
              - file
    responses:
      '201':
        description: 文档上传成功，返回文档信息
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/UploadDocumentResponse'
            example:
              docId: "doc-abc123def456"
              name: "技术文档.md"
              collectionId: "default"
              key: "/uploads/default/技术文档.md"
              sizeBytes: 10240
              mime: "text/markdown"
              createdAt: 1672531200000
              updatedAt: 1672531200000
              isDeleted: false
      '422':
        description: 请求参数验证失败
        content:
          application/json:
            schema:
              $ref: '../components/responses/common.yaml#/ValidationError'
            example:
              error:
                code: VALIDATION_ERROR
                message: "文件格式不支持"
                details:
                  field: "file"
                  reason: "仅支持文本文件"
      '413':
        description: 文件大小超出限制
        content:
          application/json:
            schema:
              $ref: '../components/responses/common.yaml#/FileTooLargeError'
            example:
              error:
                code: FILE_TOO_LARGE
                message: "文件大小超出限制"
                details:
                  maxSize: "10MB"
                  actualSize: "15MB"
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'

uploadToCollection:
  post:
    operationId: uploadDocumentToCollection
    tags:
      - 文档上传
    summary: 上传文档到指定集合
    description: |
      将文档上传到指定的集合，系统会自动处理文档并生成向量嵌入。
      
      ## 文档处理流程
      
      上传的文档会经过以下处理步骤：
      1. **集合验证**: 检查目标集合是否存在
      2. **文件验证**: 检查文件格式和大小限制
      3. **内容提取**: 从文件中提取文本内容
      4. **文本分块**: 根据集合的分块策略将文本分割成小块
      5. **向量嵌入**: 为每个文本块生成向量嵌入
      6. **索引存储**: 将向量存储到Qdrant数据库
      7. **元数据存储**: 将文档和文本块元数据存储到SQLite数据库
      
      ## 支持的文件格式
      
      当前仅支持文本文件：
      - **纯文本文件** (.txt)
      - **Markdown文件** (.md, .markdown)
      - **其他文本格式** (基于MIME类型检测)
      
      ## 使用场景
      
      - **分类管理**: 将文档上传到特定主题的集合
      - **权限控制**: 通过集合实现文档访问控制
      - **批量导入**: 结合脚本批量上传多个文档到指定集合
      
      ## 注意事项
      
      - **集合存在性**: 目标集合必须存在
      - **文件大小**: 有最大文件大小限制（通常为10MB）
      - **处理时间**: 大文件处理可能需要较长时间
      - **异步处理**: 文档处理是异步进行的，上传成功不代表处理完成
    parameters:
      - in: path
        name: collectionId
        schema:
          type: string
        required: true
        description: |
          要上传到的集合ID。
          
          **注意**: 集合必须已存在
        example: "tech-docs"
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
                description: |
                  要上传的文件。
                  
                  **支持格式**: 文本文件（.txt, .md等）
                  **大小限制**: 通常为10MB
                  **编码**: UTF-8编码推荐
            required:
              - file
    responses:
      '201':
        description: 文档上传成功，返回文档信息
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/UploadDocumentResponse'
            example:
              docId: "doc-abc123def456"
              name: "技术文档.md"
              collectionId: "tech-docs"
              key: "/uploads/tech-docs/技术文档.md"
              sizeBytes: 10240
              mime: "text/markdown"
              createdAt: 1672531200000
              updatedAt: 1672531200000
              isDeleted: false
      '400':
        description: 请求参数错误
        content:
          application/json:
            schema:
              $ref: '../components/responses/common.yaml#/BadRequestError'
            example:
              error:
                code: BAD_REQUEST
                message: "不支持的文件格式"
                details:
                  field: "file"
                  reason: "仅支持文本文件"
      '404':
        description: 指定的集合不存在
        content:
          application/json:
            schema:
              $ref: '../components/responses/common.yaml#/NotFoundError'
            example:
              error:
                code: NOT_FOUND
                message: "集合 'non-existent-collection' 不存在"
      '422':
        description: 请求参数验证失败
        content:
          application/json:
            schema:
              $ref: '../components/responses/common.yaml#/ValidationError'
            example:
              error:
                code: VALIDATION_ERROR
                message: "文件格式不支持"
                details:
                  field: "file"
                  reason: "仅支持文本文件"
      '413':
        description: 文件大小超出限制
        content:
          application/json:
            schema:
              $ref: '../components/responses/common.yaml#/FileTooLargeError'
            example:
              error:
                code: FILE_TOO_LARGE
                message: "文件大小超出限制"
                details:
                  maxSize: "10MB"
                  actualSize: "15MB"
      '500':
        $ref: '../components/responses/common.yaml#/InternalServerError'